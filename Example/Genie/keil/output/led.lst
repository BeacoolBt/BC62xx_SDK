   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"led.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	GPIO_FUNC,1,1
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  24              	_breath_timer_start:
  25              	.LFB41:
  26              		.file 1 "../../../drivers/led/led.c"
   1:../../../drivers/led/led.c **** #include "led.h"
   2:../../../drivers/led/led.c **** #include "bc62xx_pwm.h"
   3:../../../drivers/led/led.c **** #include "systick.h" 
   4:../../../drivers/led/led.c **** 
   5:../../../drivers/led/led.c **** #ifndef RELEASE
   6:../../../drivers/led/led.c **** #define RELEASE
   7:../../../drivers/led/led.c **** #endif
   8:../../../drivers/led/led.c **** 
   9:../../../drivers/led/led.c **** #ifndef BREATH_CTL_PEROID
  10:../../../drivers/led/led.c **** #define BREATH_CTL_PEROID	(10)//10ms
  11:../../../drivers/led/led.c **** #endif
  12:../../../drivers/led/led.c **** 
  13:../../../drivers/led/led.c **** 
  14:../../../drivers/led/led.c **** //for gpio control:GPIO_SetOut(6, (bool)val);
  15:../../../drivers/led/led.c **** static light_cw_t lcw;
  16:../../../drivers/led/led.c **** 
  17:../../../drivers/led/led.c **** static uint16_t ucPeriodCnt;
  18:../../../drivers/led/led.c **** static uint16_t deltaLn;
  19:../../../drivers/led/led.c **** static uint16_t deltaTp;
  20:../../../drivers/led/led.c **** 
  21:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
  22:../../../drivers/led/led.c **** static float krgb;
  23:../../../drivers/led/led.c **** static uint16_t deltaR;
  24:../../../drivers/led/led.c **** static uint16_t deltaG;
  25:../../../drivers/led/led.c **** static uint16_t deltaB;
  26:../../../drivers/led/led.c **** static uint16_t deltaLnRgb;
  27:../../../drivers/led/led.c **** #endif
  28:../../../drivers/led/led.c **** 
  29:../../../drivers/led/led.c **** static float kScale;
  30:../../../drivers/led/led.c **** 
  31:../../../drivers/led/led.c **** 
  32:../../../drivers/led/led.c **** /***********************************************************
  33:../../../drivers/led/led.c **** MIN	800
  34:../../../drivers/led/led.c **** 
  35:../../../drivers/led/led.c **** MAX	20000
  36:../../../drivers/led/led.c **** ***********************************************************/
  37:../../../drivers/led/led.c **** 
  38:../../../drivers/led/led.c **** static void _cw_ctrl(light_cw_t* t);
  39:../../../drivers/led/led.c **** 
  40:../../../drivers/led/led.c **** static void _breath_timer_start(void)
  41:../../../drivers/led/led.c **** {
  27              		.loc 1 41 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  42:../../../drivers/led/led.c **** 	ucPeriodCnt = 0;
  31              		.loc 1 42 0
  32 0000 0022     		movs	r2, #0
  33 0002 0A4B     		ldr	r3, .L9
  41:../../../drivers/led/led.c **** 	ucPeriodCnt = 0;
  34              		.loc 1 41 0
  35 0004 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 42 0
  41 0006 9A82     		strh	r2, [r3, #20]
  43:../../../drivers/led/led.c **** 	uint32_t _time = systick_get_ms();
  42              		.loc 1 43 0
  43 0008 FFF7FEFF 		bl	systick_get_ms
  44              	.LVL0:
  45 000c 0400     		movs	r4, r0
  46              	.LVL1:
  47              	.L2:
  44:../../../drivers/led/led.c **** 	while(1 == led_cw_do_breath()){
  48              		.loc 1 44 0
  49 000e FFF7FEFF 		bl	led_cw_do_breath
  50              	.LVL2:
  51 0012 0128     		cmp	r0, #1
  52 0014 08D1     		bne	.L8
  53              	.L3:
  45:../../../drivers/led/led.c **** 		while(systick_get_ms() - _time < BREATH_CTL_PEROID);
  54              		.loc 1 45 0 discriminator 1
  55 0016 FFF7FEFF 		bl	systick_get_ms
  56              	.LVL3:
  57 001a 001B     		subs	r0, r0, r4
  58 001c 0928     		cmp	r0, #9
  59 001e FAD9     		bls	.L3
  46:../../../drivers/led/led.c **** 		_time = systick_get_ms();
  60              		.loc 1 46 0
  61 0020 FFF7FEFF 		bl	systick_get_ms
  62              	.LVL4:
  63 0024 0400     		movs	r4, r0
  64              	.LVL5:
  65 0026 F2E7     		b	.L2
  66              	.LVL6:
  67              	.L8:
  47:../../../drivers/led/led.c **** 	}
  48:../../../drivers/led/led.c **** }
  68              		.loc 1 48 0
  69              		@ sp needed
  70              	.LVL7:
  71 0028 10BD     		pop	{r4, pc}
  72              	.L10:
  73 002a C046     		.align	2
  74              	.L9:
  75 002c 00000000 		.word	.LANCHOR0
  76              		.cfi_endproc
  77              	.LFE41:
  79              		.global	__aeabi_uidiv
  80              		.align	1
  81              		.global	led_cw_set_temperature
  82              		.code	16
  83              		.thumb_func
  85              	led_cw_set_temperature:
  86              	.LFB42:
  49:../../../drivers/led/led.c **** 
  50:../../../drivers/led/led.c **** void led_cw_set_temperature(uint16_t tp, breath_t* breath)
  51:../../../drivers/led/led.c **** {
  87              		.loc 1 51 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL8:
  92 0030 70B5     		push	{r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 4, -16
  96              		.cfi_offset 5, -12
  97              		.cfi_offset 6, -8
  98              		.cfi_offset 14, -4
  99              		.loc 1 51 0
 100 0032 0500     		movs	r5, r0
 101 0034 0E1E     		subs	r6, r1, #0
 102 0036 0D4C     		ldr	r4, .L22
  52:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
  53:../../../drivers/led/led.c **** 	//when mode changed from rgb to cw, do status change
  54:../../../drivers/led/led.c **** 	if(lcw.lmode != 0){
  55:../../../drivers/led/led.c **** 		lcw.lmode = 0;
  56:../../../drivers/led/led.c **** 		//do temperature change
  57:../../../drivers/led/led.c **** 		lcw.tp = tp;
  58:../../../drivers/led/led.c **** 		lcw.tpTarget = lcw.tp;
  59:../../../drivers/led/led.c **** 		if(breath){
  60:../../../drivers/led/led.c **** 			//switch on CW, lightness to RGB
  61:../../../drivers/led/led.c **** 			lcw.lnTarget = lcw.lnRgb;
  62:../../../drivers/led/led.c **** 			lcw.ln = 0;
  63:../../../drivers/led/led.c **** 			lcw.on = 0;
  64:../../../drivers/led/led.c **** 			lcw.onTarget = 1;
  65:../../../drivers/led/led.c **** 			deltaLn = lcw.lnTarget>=lcw.ln?lcw.lnTarget-lcw.ln:0;
  66:../../../drivers/led/led.c **** 			deltaLn = deltaLn/breath->pCnt;
  67:../../../drivers/led/led.c **** 
  68:../../../drivers/led/led.c **** 			//switch off RGB, 
  69:../../../drivers/led/led.c **** 			lcw.lnRgbTarget = 0;
  70:../../../drivers/led/led.c **** 			//lcw.lnRgb = lcw.lnRgb;
  71:../../../drivers/led/led.c **** 			lcw.onRgbTarget = 0;
  72:../../../drivers/led/led.c **** 			lcw.onRgb = 1;
  73:../../../drivers/led/led.c **** 			deltaLnRgb = lcw.lnRgb>lcw.lnRgbTarget?lcw.lnRgb-lcw.lnRgbTarget:0;
  74:../../../drivers/led/led.c **** 			deltaLnRgb = deltaLnRgb/breath->pCnt;
  75:../../../drivers/led/led.c **** 
  76:../../../drivers/led/led.c **** 			if(deltaLn || deltaLnRgb){
  77:../../../drivers/led/led.c **** 				lcw.breath = breath;
  78:../../../drivers/led/led.c **** 				_breath_timer_start();
  79:../../../drivers/led/led.c **** 				return;
  80:../../../drivers/led/led.c **** 			}
  81:../../../drivers/led/led.c **** 		}
  82:../../../drivers/led/led.c **** 		lcw.on = 1;
  83:../../../drivers/led/led.c **** 		lcw.onTarget = 1;
  84:../../../drivers/led/led.c **** 		lcw.onRgbTarget = 0;
  85:../../../drivers/led/led.c **** 		lcw.onRgb = 0;
  86:../../../drivers/led/led.c **** 		_cw_ctrl(&lcw);
  87:../../../drivers/led/led.c **** 		return;
  88:../../../drivers/led/led.c **** 	}
  89:../../../drivers/led/led.c **** #endif
  90:../../../drivers/led/led.c **** 	if(breath){
 103              		.loc 1 90 0
 104 0038 13D0     		beq	.L12
  91:../../../drivers/led/led.c **** 		deltaTp = (tp > lcw.tp)?(tp - lcw.tp):(lcw.tp - tp);
 105              		.loc 1 91 0
 106 003a E089     		ldrh	r0, [r4, #14]
 107              	.LVL9:
 108 003c A842     		cmp	r0, r5
 109 003e 02D2     		bcs	.L13
 110              		.loc 1 91 0 is_stmt 0 discriminator 1
 111 0040 281A     		subs	r0, r5, r0
 112 0042 80B2     		uxth	r0, r0
 113 0044 01E0     		b	.L14
 114              	.L13:
 115              		.loc 1 91 0 discriminator 2
 116 0046 401B     		subs	r0, r0, r5
 117 0048 80B2     		uxth	r0, r0
 118              	.L14:
  92:../../../drivers/led/led.c **** 		deltaTp= deltaTp/breath->pCnt;
 119              		.loc 1 92 0 is_stmt 1 discriminator 4
 120 004a 7188     		ldrh	r1, [r6, #2]
 121              	.LVL10:
 122 004c FFF7FEFF 		bl	__aeabi_uidiv
 123              	.LVL11:
 124 0050 80B2     		uxth	r0, r0
 125 0052 2083     		strh	r0, [r4, #24]
  93:../../../drivers/led/led.c **** 		if(deltaTp){
 126              		.loc 1 93 0 discriminator 4
 127 0054 0028     		cmp	r0, #0
 128 0056 04D0     		beq	.L12
  94:../../../drivers/led/led.c **** 			lcw.breath = breath;
 129              		.loc 1 94 0
 130 0058 2660     		str	r6, [r4]
  95:../../../drivers/led/led.c **** 			lcw.tpTarget = tp;
 131              		.loc 1 95 0
 132 005a 2582     		strh	r5, [r4, #16]
  96:../../../drivers/led/led.c **** 			_breath_timer_start();
 133              		.loc 1 96 0
 134 005c FFF7D0FF 		bl	_breath_timer_start
 135              	.LVL12:
  97:../../../drivers/led/led.c **** 			return;
 136              		.loc 1 97 0
 137 0060 03E0     		b	.L11
 138              	.L12:
  98:../../../drivers/led/led.c **** 		}
  99:../../../drivers/led/led.c **** 	}
 100:../../../drivers/led/led.c **** 	
 101:../../../drivers/led/led.c **** 	lcw.tp = tp;
 139              		.loc 1 101 0
 140 0062 E581     		strh	r5, [r4, #14]
 102:../../../drivers/led/led.c **** 	lcw.tpTarget = lcw.tp;
 141              		.loc 1 102 0
 142 0064 2582     		strh	r5, [r4, #16]
 103:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 143              		.loc 1 103 0
 144 0066 00F04BF9 		bl	_cw_ctrl.constprop.0
 145              	.LVL13:
 146              	.L11:
 104:../../../drivers/led/led.c **** }
 147              		.loc 1 104 0
 148              		@ sp needed
 149              	.LVL14:
 150 006a 70BD     		pop	{r4, r5, r6, pc}
 151              	.L23:
 152              		.align	2
 153              	.L22:
 154 006c 00000000 		.word	.LANCHOR0
 155              		.cfi_endproc
 156              	.LFE42:
 158              		.align	1
 159              		.global	led_cw_get_temperature
 160              		.code	16
 161              		.thumb_func
 163              	led_cw_get_temperature:
 164              	.LFB43:
 105:../../../drivers/led/led.c **** 
 106:../../../drivers/led/led.c **** uint16_t led_cw_get_temperature(void)
 107:../../../drivers/led/led.c **** {
 165              		.loc 1 107 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 108:../../../drivers/led/led.c **** 	return lcw.tpTarget;
 170              		.loc 1 108 0
 171 0070 014B     		ldr	r3, .L25
 109:../../../drivers/led/led.c **** }
 172              		.loc 1 109 0
 173              		@ sp needed
 108:../../../drivers/led/led.c **** 	return lcw.tpTarget;
 174              		.loc 1 108 0
 175 0072 188A     		ldrh	r0, [r3, #16]
 176              		.loc 1 109 0
 177 0074 7047     		bx	lr
 178              	.L26:
 179 0076 C046     		.align	2
 180              	.L25:
 181 0078 00000000 		.word	.LANCHOR0
 182              		.cfi_endproc
 183              	.LFE43:
 185              		.align	1
 186              		.global	led_cw_set_lightness
 187              		.code	16
 188              		.thumb_func
 190              	led_cw_set_lightness:
 191              	.LFB44:
 110:../../../drivers/led/led.c **** 
 111:../../../drivers/led/led.c **** void led_cw_set_lightness(uint16_t ln, breath_t* breath)
 112:../../../drivers/led/led.c **** {
 192              		.loc 1 112 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL15:
 197 007c 70B5     		push	{r4, r5, r6, lr}
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 16
 200              		.cfi_offset 4, -16
 201              		.cfi_offset 5, -12
 202              		.cfi_offset 6, -8
 203              		.cfi_offset 14, -4
 204              		.loc 1 112 0
 205 007e 0500     		movs	r5, r0
 206 0080 0E1E     		subs	r6, r1, #0
 207 0082 0D4C     		ldr	r4, .L38
 113:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 114:../../../drivers/led/led.c **** 	if(lcw.lmode == 1){
 115:../../../drivers/led/led.c **** 		if(breath){
 116:../../../drivers/led/led.c **** 			deltaLnRgb = (ln > lcw.lnRgb)?(ln - lcw.lnRgb):(lcw.lnRgb - ln);
 117:../../../drivers/led/led.c **** 			deltaLnRgb = deltaLnRgb/breath->pCnt;
 118:../../../drivers/led/led.c **** 			if(deltaLnRgb){
 119:../../../drivers/led/led.c **** 				lcw.breath = breath;
 120:../../../drivers/led/led.c **** 				lcw.lnRgbTarget = ln;
 121:../../../drivers/led/led.c **** 				_breath_timer_start();
 122:../../../drivers/led/led.c **** 				return;
 123:../../../drivers/led/led.c **** 			}
 124:../../../drivers/led/led.c **** 		}
 125:../../../drivers/led/led.c **** 		lcw.lnRgb = ln;
 126:../../../drivers/led/led.c **** 		lcw.lnRgbTarget = lcw.lnRgb;
 127:../../../drivers/led/led.c **** 	}
 128:../../../drivers/led/led.c **** 	else
 129:../../../drivers/led/led.c **** #endif
 130:../../../drivers/led/led.c **** 	{
 131:../../../drivers/led/led.c **** 		if(breath){
 208              		.loc 1 131 0
 209 0084 13D0     		beq	.L28
 132:../../../drivers/led/led.c **** 			deltaLn = (ln > lcw.ln)?(ln - lcw.ln):(lcw.ln - ln);
 210              		.loc 1 132 0
 211 0086 6089     		ldrh	r0, [r4, #10]
 212              	.LVL16:
 213 0088 A842     		cmp	r0, r5
 214 008a 02D2     		bcs	.L29
 215              		.loc 1 132 0 is_stmt 0 discriminator 1
 216 008c 281A     		subs	r0, r5, r0
 217 008e 80B2     		uxth	r0, r0
 218 0090 01E0     		b	.L30
 219              	.L29:
 220              		.loc 1 132 0 discriminator 2
 221 0092 401B     		subs	r0, r0, r5
 222 0094 80B2     		uxth	r0, r0
 223              	.L30:
 133:../../../drivers/led/led.c **** 			deltaLn = deltaLn/breath->pCnt;
 224              		.loc 1 133 0 is_stmt 1 discriminator 4
 225 0096 7188     		ldrh	r1, [r6, #2]
 226              	.LVL17:
 227 0098 FFF7FEFF 		bl	__aeabi_uidiv
 228              	.LVL18:
 229 009c 80B2     		uxth	r0, r0
 230 009e E082     		strh	r0, [r4, #22]
 134:../../../drivers/led/led.c **** 			if(deltaLn){
 231              		.loc 1 134 0 discriminator 4
 232 00a0 0028     		cmp	r0, #0
 233 00a2 04D0     		beq	.L28
 135:../../../drivers/led/led.c **** 				lcw.breath = breath;
 234              		.loc 1 135 0
 235 00a4 2660     		str	r6, [r4]
 136:../../../drivers/led/led.c **** 				lcw.lnTarget = ln;
 236              		.loc 1 136 0
 237 00a6 A581     		strh	r5, [r4, #12]
 137:../../../drivers/led/led.c **** 				_breath_timer_start();
 238              		.loc 1 137 0
 239 00a8 FFF7AAFF 		bl	_breath_timer_start
 240              	.LVL19:
 138:../../../drivers/led/led.c **** 				return;
 241              		.loc 1 138 0
 242 00ac 03E0     		b	.L27
 243              	.L28:
 139:../../../drivers/led/led.c **** 			}
 140:../../../drivers/led/led.c **** 		}
 141:../../../drivers/led/led.c **** 		lcw.ln = ln;
 244              		.loc 1 141 0
 245 00ae 6581     		strh	r5, [r4, #10]
 142:../../../drivers/led/led.c **** 		lcw.lnTarget = lcw.ln;
 246              		.loc 1 142 0
 247 00b0 A581     		strh	r5, [r4, #12]
 143:../../../drivers/led/led.c **** 	}
 144:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 248              		.loc 1 144 0
 249 00b2 00F025F9 		bl	_cw_ctrl.constprop.0
 250              	.LVL20:
 251              	.L27:
 145:../../../drivers/led/led.c **** }
 252              		.loc 1 145 0
 253              		@ sp needed
 254              	.LVL21:
 255 00b6 70BD     		pop	{r4, r5, r6, pc}
 256              	.L39:
 257              		.align	2
 258              	.L38:
 259 00b8 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE44:
 263              		.align	1
 264              		.global	led_cw_get_lightness
 265              		.code	16
 266              		.thumb_func
 268              	led_cw_get_lightness:
 269              	.LFB45:
 146:../../../drivers/led/led.c **** uint16_t led_cw_get_lightness(void)
 147:../../../drivers/led/led.c **** {
 270              		.loc 1 147 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 148:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 149:../../../drivers/led/led.c **** 	if(lcw.lmode == 1)
 150:../../../drivers/led/led.c **** 		return lcw.lnRgbTarget;
 151:../../../drivers/led/led.c **** #endif
 152:../../../drivers/led/led.c **** 	return lcw.lnTarget;
 275              		.loc 1 152 0
 276 00bc 014B     		ldr	r3, .L41
 153:../../../drivers/led/led.c **** }
 277              		.loc 1 153 0
 278              		@ sp needed
 152:../../../drivers/led/led.c **** }
 279              		.loc 1 152 0
 280 00be 9889     		ldrh	r0, [r3, #12]
 281              		.loc 1 153 0
 282 00c0 7047     		bx	lr
 283              	.L42:
 284 00c2 C046     		.align	2
 285              	.L41:
 286 00c4 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE45:
 290              		.align	1
 291              		.global	led_cw_set_on_off
 292              		.code	16
 293              		.thumb_func
 295              	led_cw_set_on_off:
 296              	.LFB46:
 154:../../../drivers/led/led.c **** 
 155:../../../drivers/led/led.c **** void led_cw_set_on_off(uint8_t on, breath_t* breath)
 156:../../../drivers/led/led.c **** {
 297              		.loc 1 156 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL22:
 302 00c8 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 24
 305              		.cfi_offset 3, -24
 306              		.cfi_offset 4, -20
 307              		.cfi_offset 5, -16
 308              		.cfi_offset 6, -12
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311              		.loc 1 156 0
 312 00ca 0500     		movs	r5, r0
 313 00cc 0E1E     		subs	r6, r1, #0
 314 00ce 114C     		ldr	r4, .L58
 157:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 158:../../../drivers/led/led.c **** 	if(lcw.lmode == 1){
 159:../../../drivers/led/led.c **** 		if(breath && (on != lcw.onRgb)){//the target lightness need to be restore
 160:../../../drivers/led/led.c **** 			deltaLnRgb = lcw.lnRgb>=ALI_MIN_LN_VAL?lcw.lnRgb-ALI_MIN_LN_VAL:0;
 161:../../../drivers/led/led.c **** 			deltaLnRgb = deltaLnRgb/breath->pCnt;
 162:../../../drivers/led/led.c **** 			if(deltaLnRgb){
 163:../../../drivers/led/led.c **** 				lcw.lnRgbTarget = lcw.lnRgb;
 164:../../../drivers/led/led.c **** 				if(on){
 165:../../../drivers/led/led.c **** 					lcw.lnRgb = ALI_MIN_LN_VAL;
 166:../../../drivers/led/led.c **** 				}
 167:../../../drivers/led/led.c **** 				lcw.breath = breath;
 168:../../../drivers/led/led.c **** 				lcw.onRgbTarget = on;
 169:../../../drivers/led/led.c **** 				_breath_timer_start();
 170:../../../drivers/led/led.c **** 				return;
 171:../../../drivers/led/led.c **** 			}
 172:../../../drivers/led/led.c **** 		}
 173:../../../drivers/led/led.c **** 		lcw.onRgb = on;
 174:../../../drivers/led/led.c **** 		lcw.onRgbTarget = lcw.onRgb;
 175:../../../drivers/led/led.c **** 	}
 176:../../../drivers/led/led.c **** 	else
 177:../../../drivers/led/led.c **** #endif
 178:../../../drivers/led/led.c **** 	{
 179:../../../drivers/led/led.c **** 		if(breath && (on != lcw.on)){//the target lightness need to be restore
 315              		.loc 1 179 0
 316 00d0 1BD0     		beq	.L44
 317              		.loc 1 179 0 is_stmt 0 discriminator 1
 318 00d2 237A     		ldrb	r3, [r4, #8]
 319 00d4 8342     		cmp	r3, r0
 320 00d6 18D0     		beq	.L44
 180:../../../drivers/led/led.c **** 			deltaLn = lcw.ln>=ALI_MIN_LN_VAL?lcw.ln-ALI_MIN_LN_VAL:0;
 321              		.loc 1 180 0 is_stmt 1
 322 00d8 6789     		ldrh	r7, [r4, #10]
 323 00da 0F4B     		ldr	r3, .L58+4
 324 00dc 0020     		movs	r0, #0
 325              	.LVL23:
 326 00de 9F42     		cmp	r7, r3
 327 00e0 02D9     		bls	.L45
 328              		.loc 1 180 0 is_stmt 0 discriminator 1
 329 00e2 0E4B     		ldr	r3, .L58+8
 330 00e4 F818     		adds	r0, r7, r3
 331 00e6 80B2     		uxth	r0, r0
 332              	.L45:
 181:../../../drivers/led/led.c **** 			deltaLn = deltaLn/breath->pCnt;
 333              		.loc 1 181 0 is_stmt 1 discriminator 4
 334 00e8 7188     		ldrh	r1, [r6, #2]
 335              	.LVL24:
 336 00ea FFF7FEFF 		bl	__aeabi_uidiv
 337              	.LVL25:
 338 00ee 80B2     		uxth	r0, r0
 339 00f0 E082     		strh	r0, [r4, #22]
 182:../../../drivers/led/led.c **** 			if(deltaLn){
 340              		.loc 1 182 0 discriminator 4
 341 00f2 0028     		cmp	r0, #0
 342 00f4 09D0     		beq	.L44
 183:../../../drivers/led/led.c **** 				lcw.lnTarget = lcw.ln;
 343              		.loc 1 183 0
 344 00f6 A781     		strh	r7, [r4, #12]
 184:../../../drivers/led/led.c **** 				if(on){
 345              		.loc 1 184 0
 346 00f8 002D     		cmp	r5, #0
 347 00fa 01D0     		beq	.L46
 185:../../../drivers/led/led.c **** 					lcw.ln = ALI_MIN_LN_VAL;
 348              		.loc 1 185 0
 349 00fc 084B     		ldr	r3, .L58+12
 350 00fe 6381     		strh	r3, [r4, #10]
 351              	.L46:
 186:../../../drivers/led/led.c **** 				}
 187:../../../drivers/led/led.c **** 				lcw.breath = breath;
 352              		.loc 1 187 0
 353 0100 2660     		str	r6, [r4]
 188:../../../drivers/led/led.c **** 				lcw.onTarget = on;
 354              		.loc 1 188 0
 355 0102 6572     		strb	r5, [r4, #9]
 189:../../../drivers/led/led.c **** 				_breath_timer_start();
 356              		.loc 1 189 0
 357 0104 FFF77CFF 		bl	_breath_timer_start
 358              	.LVL26:
 190:../../../drivers/led/led.c **** 				return;
 359              		.loc 1 190 0
 360 0108 03E0     		b	.L43
 361              	.L44:
 191:../../../drivers/led/led.c **** 				}
 192:../../../drivers/led/led.c **** 		}
 193:../../../drivers/led/led.c **** 		lcw.on = on;
 362              		.loc 1 193 0
 363 010a 2572     		strb	r5, [r4, #8]
 194:../../../drivers/led/led.c **** 		lcw.onTarget = lcw.on;
 364              		.loc 1 194 0
 365 010c 6572     		strb	r5, [r4, #9]
 195:../../../drivers/led/led.c **** 	}
 196:../../../drivers/led/led.c **** 
 197:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 366              		.loc 1 197 0
 367 010e 00F0F7F8 		bl	_cw_ctrl.constprop.0
 368              	.LVL27:
 369              	.L43:
 198:../../../drivers/led/led.c **** }
 370              		.loc 1 198 0
 371              		@ sp needed
 372              	.LVL28:
 373 0112 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 374              	.L59:
 375              		.align	2
 376              	.L58:
 377 0114 00000000 		.word	.LANCHOR0
 378 0118 8E020000 		.word	654
 379 011c 71FDFFFF 		.word	-655
 380 0120 8F020000 		.word	655
 381              		.cfi_endproc
 382              	.LFE46:
 384              		.align	1
 385              		.global	led_cw_get_on_off
 386              		.code	16
 387              		.thumb_func
 389              	led_cw_get_on_off:
 390              	.LFB47:
 199:../../../drivers/led/led.c **** uint8_t led_cw_get_on_off(void)
 200:../../../drivers/led/led.c **** {
 391              		.loc 1 200 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 201:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 202:../../../drivers/led/led.c **** 	if(lcw.lmode == 1)
 203:../../../drivers/led/led.c **** 		return lcw.onRgbTarget;
 204:../../../drivers/led/led.c **** #endif
 205:../../../drivers/led/led.c **** 	return lcw.onTarget;
 396              		.loc 1 205 0
 397 0124 014B     		ldr	r3, .L61
 206:../../../drivers/led/led.c **** }
 398              		.loc 1 206 0
 399              		@ sp needed
 205:../../../drivers/led/led.c **** }
 400              		.loc 1 205 0
 401 0126 587A     		ldrb	r0, [r3, #9]
 402              		.loc 1 206 0
 403 0128 7047     		bx	lr
 404              	.L62:
 405 012a C046     		.align	2
 406              	.L61:
 407 012c 00000000 		.word	.LANCHOR0
 408              		.cfi_endproc
 409              	.LFE47:
 411              		.global	__aeabi_ui2f
 412              		.global	__aeabi_fmul
 413              		.global	__aeabi_fdiv
 414              		.align	1
 415              		.global	led_cw_init
 416              		.code	16
 417              		.thumb_func
 419              	led_cw_init:
 420              	.LFB48:
 207:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 208:../../../drivers/led/led.c **** int led_cwrgb_set_color(uint16_t r, uint16_t g, uint16_t b, breath_t* breath)
 209:../../../drivers/led/led.c **** {
 210:../../../drivers/led/led.c **** 	//when mode changed from cw to rgb, quickly changed status
 211:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 212:../../../drivers/led/led.c **** 	//when mode changed from rgb to cw, do status change
 213:../../../drivers/led/led.c **** 	if(lcw.lmode != 1){
 214:../../../drivers/led/led.c **** 		lcw.lmode = 1;
 215:../../../drivers/led/led.c **** 		//color changed
 216:../../../drivers/led/led.c **** 		lcw.rVal = r;
 217:../../../drivers/led/led.c **** 		lcw.gVal = g;
 218:../../../drivers/led/led.c **** 		lcw.bVal = b;
 219:../../../drivers/led/led.c **** 		lcw.rValTarg = lcw.rVal;
 220:../../../drivers/led/led.c **** 		lcw.gValTarg = lcw.gVal;
 221:../../../drivers/led/led.c **** 		lcw.bValTarg = lcw.bVal;
 222:../../../drivers/led/led.c **** 		if(breath){
 223:../../../drivers/led/led.c **** 			//switch on RGB, lightness to CW
 224:../../../drivers/led/led.c **** 			lcw.lnRgbTarget = lcw.ln;
 225:../../../drivers/led/led.c **** 			lcw.lnRgb = 0;
 226:../../../drivers/led/led.c **** 			lcw.onRgbTarget = 1;
 227:../../../drivers/led/led.c **** 			//lcw.onRgb = 0;
 228:../../../drivers/led/led.c **** 			deltaLnRgb = lcw.lnRgbTarget>lcw.lnRgb?lcw.lnRgbTarget-lcw.lnRgb:0;
 229:../../../drivers/led/led.c **** 			deltaLnRgb = deltaLnRgb/breath->pCnt;
 230:../../../drivers/led/led.c **** 			//switch off CW
 231:../../../drivers/led/led.c **** 			lcw.lnTarget = 0;
 232:../../../drivers/led/led.c **** 			//lcw.ln = ALI_MIN_LN_VAL;
 233:../../../drivers/led/led.c **** 			lcw.on = 1;
 234:../../../drivers/led/led.c **** 			lcw.onTarget = 0;
 235:../../../drivers/led/led.c **** 			deltaLn = lcw.ln>=lcw.lnTarget?lcw.ln-lcw.lnTarget:0;
 236:../../../drivers/led/led.c **** 			deltaLn = deltaLn/breath->pCnt;
 237:../../../drivers/led/led.c **** 			
 238:../../../drivers/led/led.c **** 			if(deltaLnRgb || deltaLn){
 239:../../../drivers/led/led.c **** 				lcw.breath = breath;
 240:../../../drivers/led/led.c **** 				_breath_timer_start();
 241:../../../drivers/led/led.c **** 				return 0;
 242:../../../drivers/led/led.c **** 			}			
 243:../../../drivers/led/led.c **** 		}
 244:../../../drivers/led/led.c **** 		lcw.on = 0;
 245:../../../drivers/led/led.c **** 		lcw.onTarget = 0;
 246:../../../drivers/led/led.c **** 		lcw.onRgbTarget = 1;
 247:../../../drivers/led/led.c **** 		lcw.onRgb = 1;
 248:../../../drivers/led/led.c **** 		_cw_ctrl(&lcw);
 249:../../../drivers/led/led.c **** 		return 0;
 250:../../../drivers/led/led.c **** 	}
 251:../../../drivers/led/led.c **** #endif
 252:../../../drivers/led/led.c **** 	if(breath){//the target lightness need to be restore
 253:../../../drivers/led/led.c **** 		uint32_t temp;
 254:../../../drivers/led/led.c **** 		temp = r>lcw.rVal?r-lcw.rVal:lcw.rVal-r;
 255:../../../drivers/led/led.c **** 		deltaR = temp/breath->pCnt;
 256:../../../drivers/led/led.c **** 		temp = g>lcw.gVal?g-lcw.gVal:lcw.gVal-g;
 257:../../../drivers/led/led.c **** 		deltaG = temp/breath->pCnt;
 258:../../../drivers/led/led.c **** 		temp = b>lcw.bVal?b-lcw.bVal:lcw.bVal-b;
 259:../../../drivers/led/led.c **** 		deltaB = temp/breath->pCnt;
 260:../../../drivers/led/led.c **** 		if(deltaR || deltaG || deltaB){
 261:../../../drivers/led/led.c **** 			lcw.rValTarg = r;
 262:../../../drivers/led/led.c **** 			lcw.gValTarg = g;
 263:../../../drivers/led/led.c **** 			lcw.bValTarg = b;
 264:../../../drivers/led/led.c **** 			lcw.breath = breath;
 265:../../../drivers/led/led.c **** 			_breath_timer_start();
 266:../../../drivers/led/led.c **** 			return 0;
 267:../../../drivers/led/led.c **** 		}
 268:../../../drivers/led/led.c **** 	}
 269:../../../drivers/led/led.c **** 
 270:../../../drivers/led/led.c **** 	lcw.rVal = r;
 271:../../../drivers/led/led.c **** 	lcw.rValTarg = lcw.rVal;
 272:../../../drivers/led/led.c **** 	lcw.gVal = g;
 273:../../../drivers/led/led.c **** 	lcw.gValTarg = lcw.gVal;
 274:../../../drivers/led/led.c **** 	lcw.bVal = b;
 275:../../../drivers/led/led.c **** 	lcw.bValTarg = lcw.bVal;
 276:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 277:../../../drivers/led/led.c **** 	return 0;
 278:../../../drivers/led/led.c **** }
 279:../../../drivers/led/led.c **** 
 280:../../../drivers/led/led.c **** int led_cwrgb_get_color(uint16_t* r, uint16_t* g, uint16_t* b)
 281:../../../drivers/led/led.c **** {
 282:../../../drivers/led/led.c **** 	*r = lcw.rValTarg;
 283:../../../drivers/led/led.c **** 	*g = lcw.gValTarg;
 284:../../../drivers/led/led.c **** 	*b = lcw.bValTarg;
 285:../../../drivers/led/led.c **** 	return 0;
 286:../../../drivers/led/led.c **** }
 287:../../../drivers/led/led.c **** #endif
 288:../../../drivers/led/led.c **** 
 289:../../../drivers/led/led.c **** void led_cw_init(light_cw_t* t)
 290:../../../drivers/led/led.c **** {
 421              		.loc 1 290 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 16
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              	.LVL29:
 426 0130 30B5     		push	{r4, r5, lr}
 427              	.LCFI4:
 428              		.cfi_def_cfa_offset 12
 429              		.cfi_offset 4, -12
 430              		.cfi_offset 5, -8
 431              		.cfi_offset 14, -4
 291:../../../drivers/led/led.c **** 	/*init gpio*/	
 292:../../../drivers/led/led.c **** 	GPIO_CFG cfg4 ={FUNC_PWM_OUT4, GFG_PULLUP};
 432              		.loc 1 292 0
 433 0132 204C     		ldr	r4, .L66
 290:../../../drivers/led/led.c **** 	/*init gpio*/	
 434              		.loc 1 290 0
 435 0134 85B0     		sub	sp, sp, #20
 436              	.LCFI5:
 437              		.cfi_def_cfa_offset 32
 438              		.loc 1 292 0
 439 0136 2378     		ldrb	r3, [r4]
 440 0138 01A9     		add	r1, sp, #4
 290:../../../drivers/led/led.c **** 	/*init gpio*/	
 441              		.loc 1 290 0
 442 013a 0500     		movs	r5, r0
 293:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM4_C, &cfg4);
 443              		.loc 1 293 0
 444 013c 1720     		movs	r0, #23
 445              	.LVL30:
 292:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM4_C, &cfg4);
 446              		.loc 1 292 0
 447 013e 0B70     		strb	r3, [r1]
 448              		.loc 1 293 0
 449 0140 FFF7FEFF 		bl	bc_gpio_init
 450              	.LVL31:
 294:../../../drivers/led/led.c **** 	
 295:../../../drivers/led/led.c **** 	GPIO_CFG cfg5 ={FUNC_PWM_OUT5, GFG_PULLUP};
 451              		.loc 1 295 0
 452 0144 6378     		ldrb	r3, [r4, #1]
 453 0146 02A9     		add	r1, sp, #8
 296:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM5_W, &cfg5);
 454              		.loc 1 296 0
 455 0148 1820     		movs	r0, #24
 295:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM5_W, &cfg5);
 456              		.loc 1 295 0
 457 014a 0B70     		strb	r3, [r1]
 458              		.loc 1 296 0
 459 014c FFF7FEFF 		bl	bc_gpio_init
 460              	.LVL32:
 297:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 298:../../../drivers/led/led.c **** 	GPIO_CFG cfg1 ={FUNC_PWM_OUT1, GFG_PULLUP};
 299:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM1_R, &cfg1);
 300:../../../drivers/led/led.c **** 	
 301:../../../drivers/led/led.c **** 	GPIO_CFG cfg2 ={FUNC_PWM_OUT2, GFG_PULLUP};
 302:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM2_G, &cfg2);
 303:../../../drivers/led/led.c **** 	
 304:../../../drivers/led/led.c **** 	GPIO_CFG cfg3 ={FUNC_PWM_OUT3, GFG_PULLUP};
 305:../../../drivers/led/led.c **** 	bc_gpio_init(ALI_PWM3_B, &cfg3);
 306:../../../drivers/led/led.c **** #endif
 307:../../../drivers/led/led.c **** 	
 308:../../../drivers/led/led.c **** 	struct PWM_CTRL_BITS bits = {0};
 461              		.loc 1 308 0
 462 0150 0023     		movs	r3, #0
 463 0152 03AC     		add	r4, sp, #12
 309:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH4, &bits);
 464              		.loc 1 309 0
 465 0154 2100     		movs	r1, r4
 466 0156 1020     		movs	r0, #16
 308:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH4, &bits);
 467              		.loc 1 308 0
 468 0158 2370     		strb	r3, [r4]
 469              		.loc 1 309 0
 470 015a FFF7FEFF 		bl	PWM_Init
 471              	.LVL33:
 310:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH5, &bits);
 472              		.loc 1 310 0
 473 015e 2100     		movs	r1, r4
 474 0160 2020     		movs	r0, #32
 475 0162 FFF7FEFF 		bl	PWM_Init
 476              	.LVL34:
 477 0166 144C     		ldr	r4, .L66+4
 311:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 312:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH1, &bits);
 313:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH2, &bits);
 314:../../../drivers/led/led.c **** 	PWM_Init(PWM_CH3, &bits);
 315:../../../drivers/led/led.c **** #endif
 316:../../../drivers/led/led.c **** 	if(t==NULL){
 478              		.loc 1 316 0
 479 0168 002D     		cmp	r5, #0
 480 016a 09D1     		bne	.L64
 317:../../../drivers/led/led.c **** 		lcw.ln = ALI_DEFAULT_LN_VAL;
 481              		.loc 1 317 0
 482 016c 2423     		movs	r3, #36
 483 016e 5B42     		rsbs	r3, r3, #0
 484 0170 6381     		strh	r3, [r4, #10]
 318:../../../drivers/led/led.c **** 		lcw.tp = ALI_DEFAULT_TP_VAL;
 485              		.loc 1 318 0
 486 0172 124B     		ldr	r3, .L66+8
 487 0174 E381     		strh	r3, [r4, #14]
 319:../../../drivers/led/led.c **** 		lcw.on = ALI_DEFAULT_ON_VAL;
 488              		.loc 1 319 0
 489 0176 0123     		movs	r3, #1
 490 0178 2372     		strb	r3, [r4, #8]
 320:../../../drivers/led/led.c **** 		lcw.freq = ALI_FREQUENCY_16K;
 491              		.loc 1 320 0
 492 017a 114B     		ldr	r3, .L66+12
 493 017c A380     		strh	r3, [r4, #4]
 494 017e 04E0     		b	.L65
 495              	.L64:
 321:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 322:../../../drivers/led/led.c **** 		lcw.onRgb = ALI_CW_OFF;
 323:../../../drivers/led/led.c **** 		lcw.lnRgb = ALI_DEFAULT_LN_VAL;
 324:../../../drivers/led/led.c **** 		lcw.rVal = ALI_DEFAULT_R_VAL;
 325:../../../drivers/led/led.c **** 		lcw.gVal = ALI_DEFAULT_G_VAL;
 326:../../../drivers/led/led.c **** 		lcw.bVal = ALI_DEFAULT_B_VAL;
 327:../../../drivers/led/led.c **** 		lcw.lmode = 0;
 328:../../../drivers/led/led.c **** #endif
 329:../../../drivers/led/led.c **** 	}
 330:../../../drivers/led/led.c **** 	else{
 331:../../../drivers/led/led.c **** 		lcw = *t;
 496              		.loc 1 331 0
 497 0180 2300     		movs	r3, r4
 498 0182 07CD     		ldmia	r5!, {r0, r1, r2}
 499 0184 07C3     		stmia	r3!, {r0, r1, r2}
 500              	.LVL35:
 501 0186 06CD     		ldmia	r5!, {r1, r2}
 502 0188 06C3     		stmia	r3!, {r1, r2}
 503              	.LVL36:
 504              	.L65:
 332:../../../drivers/led/led.c **** 	}
 333:../../../drivers/led/led.c **** 	lcw.lnTarget = lcw.ln;
 505              		.loc 1 333 0
 506 018a 6389     		ldrh	r3, [r4, #10]
 334:../../../drivers/led/led.c **** 	lcw.tpTarget = lcw.tp;
 335:../../../drivers/led/led.c **** 	lcw.onTarget = lcw.on;
 336:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 337:../../../drivers/led/led.c **** 	lcw.lnRgbTarget = lcw.lnRgb;
 338:../../../drivers/led/led.c **** 	lcw.onRgbTarget = lcw.onRgb;
 339:../../../drivers/led/led.c **** 	lcw.rValTarg = lcw.rVal;
 340:../../../drivers/led/led.c **** 	lcw.gValTarg = lcw.gVal;
 341:../../../drivers/led/led.c **** 	lcw.bValTarg = lcw.bVal;
 342:../../../drivers/led/led.c **** 	krgb = (float)lcw.freq/65536/4096;
 343:../../../drivers/led/led.c **** #ifndef RELEASE
 344:../../../drivers/led/led.c **** 	printf("krgb[%f]\r\n", krgb);
 345:../../../drivers/led/led.c **** #endif
 346:../../../drivers/led/led.c **** #endif
 347:../../../drivers/led/led.c **** 	kScale = (float)lcw.freq/65536/1920;
 507              		.loc 1 347 0
 508 018c A088     		ldrh	r0, [r4, #4]
 333:../../../drivers/led/led.c **** 	lcw.tpTarget = lcw.tp;
 509              		.loc 1 333 0
 510 018e A381     		strh	r3, [r4, #12]
 334:../../../drivers/led/led.c **** 	lcw.tpTarget = lcw.tp;
 511              		.loc 1 334 0
 512 0190 E389     		ldrh	r3, [r4, #14]
 513 0192 2382     		strh	r3, [r4, #16]
 335:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 514              		.loc 1 335 0
 515 0194 237A     		ldrb	r3, [r4, #8]
 516 0196 6372     		strb	r3, [r4, #9]
 517              		.loc 1 347 0
 518 0198 FFF7FEFF 		bl	__aeabi_ui2f
 519              	.LVL37:
 520 019c DE21     		movs	r1, #222
 521 019e 8905     		lsls	r1, r1, #22
 522 01a0 FFF7FEFF 		bl	__aeabi_fmul
 523              	.LVL38:
 524 01a4 0749     		ldr	r1, .L66+16
 525 01a6 FFF7FEFF 		bl	__aeabi_fdiv
 526              	.LVL39:
 527 01aa E061     		str	r0, [r4, #28]
 348:../../../drivers/led/led.c **** #ifndef RELEASE
 349:../../../drivers/led/led.c **** 	printf("kScale[%f]\r\n", kScale);
 350:../../../drivers/led/led.c **** #endif
 351:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 528              		.loc 1 351 0
 529 01ac 00F0A8F8 		bl	_cw_ctrl.constprop.0
 530              	.LVL40:
 352:../../../drivers/led/led.c **** }
 531              		.loc 1 352 0
 532 01b0 05B0     		add	sp, sp, #20
 533              		@ sp needed
 534 01b2 30BD     		pop	{r4, r5, pc}
 535              	.L67:
 536              		.align	2
 537              	.L66:
 538 01b4 00000000 		.word	.LANCHOR1
 539 01b8 00000000 		.word	.LANCHOR0
 540 01bc A0280000 		.word	10400
 541 01c0 DC050000 		.word	1500
 542 01c4 0000F044 		.word	1156579328
 543              		.cfi_endproc
 544              	.LFE48:
 546              		.align	1
 547              		.global	led_cw_set_breath
 548              		.code	16
 549              		.thumb_func
 551              	led_cw_set_breath:
 552              	.LFB50:
 353:../../../drivers/led/led.c **** 
 354:../../../drivers/led/led.c **** static void _cw_ctrl(light_cw_t* t)
 355:../../../drivers/led/led.c **** {
 356:../../../drivers/led/led.c **** 	//control CW light
 357:../../../drivers/led/led.c **** 	if(t->on || t->onTarget){
 358:../../../drivers/led/led.c **** 		uint16_t c,w;
 359:../../../drivers/led/led.c **** 		c = kScale*(lcw.tp-800)*lcw.ln/10;
 360:../../../drivers/led/led.c **** 		w = kScale*(20000 -lcw.tp)*lcw.ln/10;
 361:../../../drivers/led/led.c **** #ifndef RELEASE
 362:../../../drivers/led/led.c **** 		printf("on[%d] ln[%d] tp[%d] c[%d] w[%d]\r\n", t->on||t->onTarget, t->ln, t->tp, c, w);
 363:../../../drivers/led/led.c **** #endif
 364:../../../drivers/led/led.c **** 		if(c){
 365:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH4, c, lcw.freq-c);//cold
 366:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH4);
 367:../../../drivers/led/led.c **** 		}
 368:../../../drivers/led/led.c **** 		else{
 369:../../../drivers/led/led.c **** 			PWM_DeInit(PWM_CH4);
 370:../../../drivers/led/led.c **** 		}
 371:../../../drivers/led/led.c **** 		if(w){
 372:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH5, w, lcw.freq-w);//warm
 373:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH5);
 374:../../../drivers/led/led.c **** 		}
 375:../../../drivers/led/led.c **** 		else{
 376:../../../drivers/led/led.c **** 			PWM_DeInit(PWM_CH5);
 377:../../../drivers/led/led.c **** 		}
 378:../../../drivers/led/led.c **** 	}
 379:../../../drivers/led/led.c **** 	else{
 380:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH4);
 381:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH5);
 382:../../../drivers/led/led.c **** 	}
 383:../../../drivers/led/led.c **** 
 384:../../../drivers/led/led.c **** 	//control RGB light
 385:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 386:../../../drivers/led/led.c **** 	if(t->onRgb || t->onRgbTarget){
 387:../../../drivers/led/led.c **** #ifndef RELEASE
 388:../../../drivers/led/led.c **** 		printf("on[%x] r[%x] g[%x] b[%x]\r\n",t->onRgb||t->onRgbTarget, t->rVal, t->gVal, t->bVal);
 389:../../../drivers/led/led.c **** #endif
 390:../../../drivers/led/led.c **** 		if(t->rVal){
 391:../../../drivers/led/led.c **** 			uint16_t r = (t->rVal>>4)*t->lnRgb*krgb;
 392:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH1, r, t->freq-r);//cold
 393:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH1);
 394:../../../drivers/led/led.c **** 		}
 395:../../../drivers/led/led.c **** 		else{
 396:../../../drivers/led/led.c **** 			PWM_DeInit(PWM_CH1);
 397:../../../drivers/led/led.c **** 		}
 398:../../../drivers/led/led.c **** 		if(t->gVal){
 399:../../../drivers/led/led.c **** 			uint16_t g = (t->gVal>>4)*t->lnRgb*krgb;
 400:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH2, g, t->freq-g);//warm
 401:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH2);
 402:../../../drivers/led/led.c **** 		}
 403:../../../drivers/led/led.c **** 		else{
 404:../../../drivers/led/led.c **** 			PWM_DeInit(PWM_CH2);
 405:../../../drivers/led/led.c **** 		}
 406:../../../drivers/led/led.c **** 		if(t->bVal){
 407:../../../drivers/led/led.c **** 			uint16_t b = (t->bVal>>4)*t->lnRgb*krgb;
 408:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH3, b, t->freq-b);//warm
 409:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH3);
 410:../../../drivers/led/led.c **** 		}
 411:../../../drivers/led/led.c **** 		else{
 412:../../../drivers/led/led.c **** 			PWM_DeInit(PWM_CH3);
 413:../../../drivers/led/led.c **** 		}
 414:../../../drivers/led/led.c **** 	}
 415:../../../drivers/led/led.c **** 	else{//CW mode, close RGB
 416:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH1);
 417:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH2);
 418:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH3);
 419:../../../drivers/led/led.c **** 	}
 420:../../../drivers/led/led.c **** #endif
 421:../../../drivers/led/led.c **** }
 422:../../../drivers/led/led.c **** 
 423:../../../drivers/led/led.c **** void led_cw_set_breath(breath_t* t)
 424:../../../drivers/led/led.c **** {
 553              		.loc 1 424 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              	.LVL41:
 425:../../../drivers/led/led.c **** 	switch(t->mode){
 558              		.loc 1 425 0
 559 01c8 0378     		ldrb	r3, [r0]
 424:../../../drivers/led/led.c **** 	switch(t->mode){
 560              		.loc 1 424 0
 561 01ca 70B5     		push	{r4, r5, r6, lr}
 562              	.LCFI6:
 563              		.cfi_def_cfa_offset 16
 564              		.cfi_offset 4, -16
 565              		.cfi_offset 5, -12
 566              		.cfi_offset 6, -8
 567              		.cfi_offset 14, -4
 568              		.loc 1 425 0
 569 01cc 5B07     		lsls	r3, r3, #29
 570 01ce 5B0F     		lsrs	r3, r3, #29
 571 01d0 DAB2     		uxtb	r2, r3
 424:../../../drivers/led/led.c **** 	switch(t->mode){
 572              		.loc 1 424 0
 573 01d2 0400     		movs	r4, r0
 574              		.loc 1 425 0
 575 01d4 002A     		cmp	r2, #0
 576 01d6 0CD0     		beq	.L70
 577 01d8 012A     		cmp	r2, #1
 578 01da 0ED1     		bne	.L68
 426:../../../drivers/led/led.c **** 		case BREATH_MODE_FLOW:{
 427:../../../drivers/led/led.c **** 		}break;
 428:../../../drivers/led/led.c **** 		case BREATH_MODE_H2L2H:{
 429:../../../drivers/led/led.c **** 			#if (LIGHT_CW_WITH_RGB)
 430:../../../drivers/led/led.c **** 			if(lcw.lmode == 1){
 431:../../../drivers/led/led.c **** 				lcw.onRgbTarget = 1;
 432:../../../drivers/led/led.c **** 				lcw.lnRgbTarget = lcw.lnRgb;
 433:../../../drivers/led/led.c **** 				deltaLnRgb = lcw.lnRgbTarget/t->pCnt;
 434:../../../drivers/led/led.c **** 				if(deltaLnRgb == 0)
 435:../../../drivers/led/led.c **** 					return;
 436:../../../drivers/led/led.c **** 			}
 437:../../../drivers/led/led.c **** 			else
 438:../../../drivers/led/led.c **** 			#endif
 439:../../../drivers/led/led.c **** 			{
 440:../../../drivers/led/led.c **** 				lcw.onTarget = 1;
 579              		.loc 1 440 0
 580 01dc 074D     		ldr	r5, .L78
 441:../../../drivers/led/led.c **** 				lcw.lnTarget = lcw.ln;
 581              		.loc 1 441 0
 582 01de 6889     		ldrh	r0, [r5, #10]
 583              	.LVL42:
 440:../../../drivers/led/led.c **** 				lcw.lnTarget = lcw.ln;
 584              		.loc 1 440 0
 585 01e0 6B72     		strb	r3, [r5, #9]
 586              		.loc 1 441 0
 587 01e2 A881     		strh	r0, [r5, #12]
 442:../../../drivers/led/led.c **** 				deltaLn = lcw.lnTarget/t->pCnt;
 588              		.loc 1 442 0
 589 01e4 6188     		ldrh	r1, [r4, #2]
 590 01e6 FFF7FEFF 		bl	__aeabi_uidiv
 591              	.LVL43:
 592 01ea 80B2     		uxth	r0, r0
 593 01ec E882     		strh	r0, [r5, #22]
 443:../../../drivers/led/led.c **** 				if(deltaLn == 0)
 594              		.loc 1 443 0
 595 01ee 0028     		cmp	r0, #0
 596 01f0 03D0     		beq	.L68
 597              	.L70:
 444:../../../drivers/led/led.c **** 					return;
 445:../../../drivers/led/led.c **** 			}
 446:../../../drivers/led/led.c **** 		}break;
 447:../../../drivers/led/led.c **** 		default:{
 448:../../../drivers/led/led.c **** 			return;
 449:../../../drivers/led/led.c **** 		}break;
 450:../../../drivers/led/led.c **** 	}
 451:../../../drivers/led/led.c **** 	lcw.breath = t;
 598              		.loc 1 451 0
 599 01f2 024B     		ldr	r3, .L78
 600 01f4 1C60     		str	r4, [r3]
 452:../../../drivers/led/led.c **** #ifndef RELEASE
 453:../../../drivers/led/led.c **** 	printf("mode[%x] rCnt[%x] pCnt[%x]", lcw.breath->mode, lcw.breath->rCnt,
 454:../../../drivers/led/led.c **** 											lcw.breath->pCnt);
 455:../../../drivers/led/led.c **** #endif
 456:../../../drivers/led/led.c **** 	_breath_timer_start();
 601              		.loc 1 456 0
 602 01f6 FFF703FF 		bl	_breath_timer_start
 603              	.LVL44:
 604              	.L68:
 457:../../../drivers/led/led.c **** }
 605              		.loc 1 457 0
 606              		@ sp needed
 607              	.LVL45:
 608 01fa 70BD     		pop	{r4, r5, r6, pc}
 609              	.L79:
 610              		.align	2
 611              	.L78:
 612 01fc 00000000 		.word	.LANCHOR0
 613              		.cfi_endproc
 614              	.LFE50:
 616              		.align	1
 617              		.global	led_cw_do_breath
 618              		.code	16
 619              		.thumb_func
 621              	led_cw_do_breath:
 622              	.LFB51:
 458:../../../drivers/led/led.c **** 
 459:../../../drivers/led/led.c **** /**
 460:../../../drivers/led/led.c ****  ****************************************************************************************
 461:../../../drivers/led/led.c ****  * @brief led cw do breath function
 462:../../../drivers/led/led.c ****  * @param None
 463:../../../drivers/led/led.c ****  * @return 0 success
 464:../../../drivers/led/led.c ****  			1 need continue do
 465:../../../drivers/led/led.c ****  			2 failed
 466:../../../drivers/led/led.c ****  ****************************************************************************************
 467:../../../drivers/led/led.c ****  */
 468:../../../drivers/led/led.c **** uint8_t  led_cw_do_breath(void)
 469:../../../drivers/led/led.c **** {
 623              		.loc 1 469 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627 0200 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 628              	.LCFI7:
 629              		.cfi_def_cfa_offset 24
 630              		.cfi_offset 3, -24
 631              		.cfi_offset 4, -20
 632              		.cfi_offset 5, -16
 633              		.cfi_offset 6, -12
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 470:../../../drivers/led/led.c **** 	if(lcw.breath == NULL || (deltaLn == 0 && deltaTp == 0
 636              		.loc 1 470 0
 637 0202 3E4B     		ldr	r3, .L111
 471:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 472:../../../drivers/led/led.c **** 		&& deltaLnRgb == 0 && deltaB == 0 && deltaG == 0 && deltaR == 0
 473:../../../drivers/led/led.c **** #endif
 474:../../../drivers/led/led.c **** 		)){
 475:../../../drivers/led/led.c **** 		//use target ctl
 476:../../../drivers/led/led.c **** 		return 2;
 638              		.loc 1 476 0
 639 0204 0220     		movs	r0, #2
 470:../../../drivers/led/led.c **** 	if(lcw.breath == NULL || (deltaLn == 0 && deltaTp == 0
 640              		.loc 1 470 0
 641 0206 1968     		ldr	r1, [r3]
 642 0208 0029     		cmp	r1, #0
 643 020a 00D1     		bne	.LCB512
 644 020c 75E0     		b	.L103	@long jump
 645              	.LCB512:
 470:../../../drivers/led/led.c **** 	if(lcw.breath == NULL || (deltaLn == 0 && deltaTp == 0
 646              		.loc 1 470 0 is_stmt 0 discriminator 1
 647 020e DA8A     		ldrh	r2, [r3, #22]
 648 0210 002A     		cmp	r2, #0
 649 0212 03D1     		bne	.L82
 470:../../../drivers/led/led.c **** 	if(lcw.breath == NULL || (deltaLn == 0 && deltaTp == 0
 650              		.loc 1 470 0 discriminator 2
 651 0214 1C8B     		ldrh	r4, [r3, #24]
 652 0216 002C     		cmp	r4, #0
 653 0218 00D1     		bne	.LCB518
 654 021a 6EE0     		b	.L103	@long jump
 655              	.LCB518:
 656              	.L82:
 657              	.LVL46:
 477:../../../drivers/led/led.c **** 	}
 478:../../../drivers/led/led.c **** 	uint8_t _sts = 1;
 479:../../../drivers/led/led.c **** #ifndef RELEASE
 480:../../../drivers/led/led.c **** 	printf("deltaLn[%x]deltaTp[%x]ucPeriodCnt[%x] mode[%x]\r\n", deltaLn, deltaTp, ucPeriodCnt, lcw.br
 481:../../../drivers/led/led.c **** #endif
 482:../../../drivers/led/led.c **** 	
 483:../../../drivers/led/led.c **** 	switch(lcw.breath->mode){
 658              		.loc 1 483 0 is_stmt 1
 659 021c 0D78     		ldrb	r5, [r1]
 660 021e 6C07     		lsls	r4, r5, #29
 661 0220 640F     		lsrs	r4, r4, #29
 662 0222 02D0     		beq	.L84
 663 0224 012C     		cmp	r4, #1
 664 0226 31D0     		beq	.L85
 665 0228 62E0     		b	.L110
 666              	.L84:
 484:../../../drivers/led/led.c **** 		case BREATH_MODE_FLOW:{
 485:../../../drivers/led/led.c **** 			if(ucPeriodCnt < lcw.breath->pCnt){
 667              		.loc 1 485 0
 668 022a 4E88     		ldrh	r6, [r1, #2]
 669 022c 988A     		ldrh	r0, [r3, #20]
 670 022e 8642     		cmp	r6, r0
 671 0230 1AD9     		bls	.L86
 486:../../../drivers/led/led.c **** 				if(lcw.onTarget > lcw.on 
 672              		.loc 1 486 0
 673 0232 587A     		ldrb	r0, [r3, #9]
 674 0234 197A     		ldrb	r1, [r3, #8]
 675 0236 8842     		cmp	r0, r1
 676 0238 04D8     		bhi	.L87
 487:../../../drivers/led/led.c **** 					|| ((lcw.onTarget == lcw.on) 
 677              		.loc 1 487 0
 678 023a 07D1     		bne	.L88
 488:../../../drivers/led/led.c **** 					&& lcw.lnTarget > lcw.ln))
 679              		.loc 1 488 0
 680 023c 9889     		ldrh	r0, [r3, #12]
 681 023e 5989     		ldrh	r1, [r3, #10]
 682 0240 8842     		cmp	r0, r1
 683 0242 03D9     		bls	.L88
 684              	.L87:
 489:../../../drivers/led/led.c **** 					lcw.ln += deltaLn;
 685              		.loc 1 489 0
 686 0244 5989     		ldrh	r1, [r3, #10]
 687 0246 5218     		adds	r2, r2, r1
 688 0248 5A81     		strh	r2, [r3, #10]
 689 024a 02E0     		b	.L89
 690              	.L88:
 490:../../../drivers/led/led.c **** 				else 
 491:../../../drivers/led/led.c **** 					lcw.ln -= deltaLn;
 691              		.loc 1 491 0
 692 024c 5989     		ldrh	r1, [r3, #10]
 693 024e 8A1A     		subs	r2, r1, r2
 694 0250 5A81     		strh	r2, [r3, #10]
 695              	.L89:
 492:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 493:../../../drivers/led/led.c **** 				if(lcw.onRgbTarget > lcw.onRgb 
 494:../../../drivers/led/led.c **** 					|| ((lcw.onRgbTarget == lcw.onRgb) 
 495:../../../drivers/led/led.c **** 					&& lcw.lnRgbTarget > lcw.lnRgb))
 496:../../../drivers/led/led.c **** 					lcw.lnRgb += deltaLnRgb;
 497:../../../drivers/led/led.c **** 				else 
 498:../../../drivers/led/led.c **** 					lcw.lnRgb -= deltaLnRgb;
 499:../../../drivers/led/led.c **** #endif
 500:../../../drivers/led/led.c **** 
 501:../../../drivers/led/led.c **** 				lcw.tp = lcw.tpTarget > lcw.tp?lcw.tp + deltaTp:lcw.tp - deltaTp;
 696              		.loc 1 501 0
 697 0252 DA89     		ldrh	r2, [r3, #14]
 698 0254 188A     		ldrh	r0, [r3, #16]
 699 0256 198B     		ldrh	r1, [r3, #24]
 700 0258 9042     		cmp	r0, r2
 701 025a 02D9     		bls	.L90
 702              		.loc 1 501 0 is_stmt 0 discriminator 1
 703 025c 5218     		adds	r2, r2, r1
 704 025e 92B2     		uxth	r2, r2
 705 0260 11E0     		b	.L108
 706              	.L90:
 707              		.loc 1 501 0 discriminator 2
 708 0262 521A     		subs	r2, r2, r1
 709 0264 92B2     		uxth	r2, r2
 710 0266 0EE0     		b	.L108
 711              	.L86:
 502:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 503:../../../drivers/led/led.c **** 				lcw.rVal = lcw.rValTarg > lcw.rVal?lcw.rVal + deltaR:lcw.rVal - deltaR;
 504:../../../drivers/led/led.c **** 				lcw.gVal = lcw.gValTarg > lcw.gVal?lcw.gVal + deltaG:lcw.gVal - deltaG;
 505:../../../drivers/led/led.c **** 				lcw.bVal = lcw.bValTarg > lcw.bVal?lcw.bVal + deltaB:lcw.bVal - deltaB;
 506:../../../drivers/led/led.c **** #endif
 507:../../../drivers/led/led.c **** 			}
 508:../../../drivers/led/led.c **** 			else{
 509:../../../drivers/led/led.c **** 				if(--lcw.breath->rCnt == 0){
 712              		.loc 1 509 0 is_stmt 1
 713 0268 1F20     		movs	r0, #31
 714 026a 0726     		movs	r6, #7
 715 026c EA08     		lsrs	r2, r5, #3
 716 026e 1F32     		adds	r2, r2, #31
 717 0270 0240     		ands	r2, r0
 718 0272 D000     		lsls	r0, r2, #3
 719 0274 3540     		ands	r5, r6
 720 0276 0543     		orrs	r5, r0
 721 0278 0D70     		strb	r5, [r1]
 722 027a 002A     		cmp	r2, #0
 723 027c 2AD0     		beq	.L92
 510:../../../drivers/led/led.c **** 					_sts = 0;
 511:../../../drivers/led/led.c **** 				}
 512:../../../drivers/led/led.c **** 				else{
 513:../../../drivers/led/led.c **** 					ucPeriodCnt = 0;
 514:../../../drivers/led/led.c **** 					lcw.ln = lcw.lnTarget;
 724              		.loc 1 514 0
 725 027e 9A89     		ldrh	r2, [r3, #12]
 513:../../../drivers/led/led.c **** 					lcw.ln = lcw.lnTarget;
 726              		.loc 1 513 0
 727 0280 9C82     		strh	r4, [r3, #20]
 728              		.loc 1 514 0
 729 0282 5A81     		strh	r2, [r3, #10]
 515:../../../drivers/led/led.c **** 					lcw.tp = lcw.tpTarget;
 730              		.loc 1 515 0
 731 0284 1A8A     		ldrh	r2, [r3, #16]
 732              	.L108:
 733 0286 DA81     		strh	r2, [r3, #14]
 478:../../../drivers/led/led.c **** #ifndef RELEASE
 734              		.loc 1 478 0
 735 0288 0124     		movs	r4, #1
 736 028a 32E0     		b	.L83
 737              	.L85:
 516:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 517:../../../drivers/led/led.c **** 					lcw.lnRgb = lcw.lnRgbTarget;
 518:../../../drivers/led/led.c **** 					lcw.rVal = lcw.rValTarg;
 519:../../../drivers/led/led.c **** 					lcw.gVal = lcw.gValTarg;
 520:../../../drivers/led/led.c **** 					lcw.bVal = lcw.bValTarg;
 521:../../../drivers/led/led.c **** #endif
 522:../../../drivers/led/led.c **** 				}
 523:../../../drivers/led/led.c **** 			}
 524:../../../drivers/led/led.c **** 		}break;
 525:../../../drivers/led/led.c **** 		case BREATH_MODE_H2L2H:{
 526:../../../drivers/led/led.c **** 			if(ucPeriodCnt < lcw.breath->pCnt){
 738              		.loc 1 526 0
 739 028c 4888     		ldrh	r0, [r1, #2]
 740 028e 9E8A     		ldrh	r6, [r3, #20]
 741 0290 B042     		cmp	r0, r6
 742 0292 17D8     		bhi	.L109
 527:../../../drivers/led/led.c **** 				lcw.ln -= deltaLn;
 528:../../../drivers/led/led.c **** 				lcw.tp -= deltaTp;
 529:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 530:../../../drivers/led/led.c **** 				lcw.lnRgb -= deltaLnRgb;
 531:../../../drivers/led/led.c **** 				lcw.rVal -= deltaR;
 532:../../../drivers/led/led.c **** 				lcw.gVal -= deltaG;
 533:../../../drivers/led/led.c **** 				lcw.bVal -= deltaB;
 534:../../../drivers/led/led.c **** #endif
 535:../../../drivers/led/led.c **** 			}
 536:../../../drivers/led/led.c **** 			else if(ucPeriodCnt < (lcw.breath->pCnt<<1)){
 743              		.loc 1 536 0
 744 0294 4000     		lsls	r0, r0, #1
 745 0296 8642     		cmp	r6, r0
 746 0298 07DA     		bge	.L94
 537:../../../drivers/led/led.c **** 				
 538:../../../drivers/led/led.c **** 				lcw.ln += deltaLn;
 747              		.loc 1 538 0
 748 029a 5989     		ldrh	r1, [r3, #10]
 749 029c 5218     		adds	r2, r2, r1
 750 029e 5A81     		strh	r2, [r3, #10]
 539:../../../drivers/led/led.c **** 				lcw.tp += deltaTp;
 751              		.loc 1 539 0
 752 02a0 D989     		ldrh	r1, [r3, #14]
 753 02a2 1A8B     		ldrh	r2, [r3, #24]
 754 02a4 8A18     		adds	r2, r1, r2
 755 02a6 DA81     		strh	r2, [r3, #14]
 756 02a8 23E0     		b	.L83
 757              	.L94:
 540:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 541:../../../drivers/led/led.c **** 				lcw.lnRgb += deltaLnRgb;
 542:../../../drivers/led/led.c **** 				lcw.rVal += deltaR;
 543:../../../drivers/led/led.c **** 				lcw.gVal += deltaG;
 544:../../../drivers/led/led.c **** 				lcw.bVal += deltaB;
 545:../../../drivers/led/led.c **** #endif
 546:../../../drivers/led/led.c **** 			}
 547:../../../drivers/led/led.c **** 			else{
 548:../../../drivers/led/led.c **** 				if(--lcw.breath->rCnt == 0){
 758              		.loc 1 548 0
 759 02aa 1F26     		movs	r6, #31
 760 02ac 0727     		movs	r7, #7
 761 02ae E808     		lsrs	r0, r5, #3
 762 02b0 1F30     		adds	r0, r0, #31
 763 02b2 3040     		ands	r0, r6
 764 02b4 C600     		lsls	r6, r0, #3
 765 02b6 3D40     		ands	r5, r7
 766 02b8 3543     		orrs	r5, r6
 767 02ba 0D70     		strb	r5, [r1]
 768 02bc 0028     		cmp	r0, #0
 769 02be 09D0     		beq	.L92
 549:../../../drivers/led/led.c **** 					_sts = 0;
 550:../../../drivers/led/led.c **** 				}
 551:../../../drivers/led/led.c **** 				else{
 552:../../../drivers/led/led.c **** 					ucPeriodCnt = 0;
 770              		.loc 1 552 0
 771 02c0 0021     		movs	r1, #0
 772 02c2 9982     		strh	r1, [r3, #20]
 773              	.L109:
 553:../../../drivers/led/led.c **** 					lcw.ln -= deltaLn;
 774              		.loc 1 553 0
 775 02c4 5989     		ldrh	r1, [r3, #10]
 776 02c6 8A1A     		subs	r2, r1, r2
 777 02c8 5A81     		strh	r2, [r3, #10]
 554:../../../drivers/led/led.c **** 					lcw.tp -= deltaTp;
 778              		.loc 1 554 0
 779 02ca 198B     		ldrh	r1, [r3, #24]
 780 02cc DA89     		ldrh	r2, [r3, #14]
 781 02ce 521A     		subs	r2, r2, r1
 782 02d0 DA81     		strh	r2, [r3, #14]
 783 02d2 0EE0     		b	.L83
 784              	.L92:
 785              	.LVL47:
 555:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 556:../../../drivers/led/led.c **** 					lcw.lnRgb -= deltaLnRgb;
 557:../../../drivers/led/led.c **** 					lcw.rVal -= deltaR;
 558:../../../drivers/led/led.c **** 					lcw.gVal -= deltaG;
 559:../../../drivers/led/led.c **** 					lcw.bVal -= deltaB;
 560:../../../drivers/led/led.c **** #endif
 561:../../../drivers/led/led.c **** 				}
 562:../../../drivers/led/led.c **** 			}
 563:../../../drivers/led/led.c **** 		}break;
 564:../../../drivers/led/led.c **** 		default:{
 565:../../../drivers/led/led.c **** 			_sts = 2;
 566:../../../drivers/led/led.c **** 		}break;
 567:../../../drivers/led/led.c **** 	}
 568:../../../drivers/led/led.c **** 
 569:../../../drivers/led/led.c **** 	if(_sts == 0){
 570:../../../drivers/led/led.c **** 		lcw.on = lcw.onTarget;
 571:../../../drivers/led/led.c **** 		lcw.ln = lcw.lnTarget;
 572:../../../drivers/led/led.c **** 		lcw.tp = lcw.tpTarget;
 573:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 574:../../../drivers/led/led.c **** 		lcw.onRgb = lcw.onRgbTarget;
 575:../../../drivers/led/led.c **** 		lcw.lnRgb = lcw.lnRgbTarget;
 576:../../../drivers/led/led.c **** 		lcw.rVal = lcw.rValTarg;
 577:../../../drivers/led/led.c **** 		lcw.gVal = lcw.gValTarg;
 578:../../../drivers/led/led.c **** 		lcw.bVal = lcw.bValTarg;
 579:../../../drivers/led/led.c **** #endif
 580:../../../drivers/led/led.c **** 		lcw.breath = NULL;
 786              		.loc 1 580 0
 787 02d4 0024     		movs	r4, #0
 570:../../../drivers/led/led.c **** 		lcw.ln = lcw.lnTarget;
 788              		.loc 1 570 0
 789 02d6 5A7A     		ldrb	r2, [r3, #9]
 790              		.loc 1 580 0
 791 02d8 1C60     		str	r4, [r3]
 570:../../../drivers/led/led.c **** 		lcw.ln = lcw.lnTarget;
 792              		.loc 1 570 0
 793 02da 1A72     		strb	r2, [r3, #8]
 571:../../../drivers/led/led.c **** 		lcw.tp = lcw.tpTarget;
 794              		.loc 1 571 0
 795 02dc 9A89     		ldrh	r2, [r3, #12]
 581:../../../drivers/led/led.c **** 		deltaTp = 0;
 796              		.loc 1 581 0
 797 02de 1C83     		strh	r4, [r3, #24]
 571:../../../drivers/led/led.c **** 		lcw.tp = lcw.tpTarget;
 798              		.loc 1 571 0
 799 02e0 5A81     		strh	r2, [r3, #10]
 572:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 800              		.loc 1 572 0
 801 02e2 1A8A     		ldrh	r2, [r3, #16]
 582:../../../drivers/led/led.c **** 		deltaLn = 0;
 802              		.loc 1 582 0
 803 02e4 DC82     		strh	r4, [r3, #22]
 572:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 804              		.loc 1 572 0
 805 02e6 DA81     		strh	r2, [r3, #14]
 806              	.LVL48:
 807              	.L95:
 583:../../../drivers/led/led.c **** #if (LIGHT_CW_WITH_RGB)
 584:../../../drivers/led/led.c **** 		deltaR = 0;
 585:../../../drivers/led/led.c **** 		deltaG = 0;
 586:../../../drivers/led/led.c **** 		deltaB = 0;
 587:../../../drivers/led/led.c **** 		deltaLnRgb = 0;
 588:../../../drivers/led/led.c **** #endif
 589:../../../drivers/led/led.c **** 	}
 590:../../../drivers/led/led.c **** 	else{
 591:../../../drivers/led/led.c **** 		ucPeriodCnt++;
 592:../../../drivers/led/led.c **** 	}
 593:../../../drivers/led/led.c **** 	_cw_ctrl(&lcw);
 808              		.loc 1 593 0
 809 02e8 00F00AF8 		bl	_cw_ctrl.constprop.0
 810              	.LVL49:
 594:../../../drivers/led/led.c **** 	return _sts;
 811              		.loc 1 594 0
 812 02ec 2000     		movs	r0, r4
 813 02ee 04E0     		b	.L103
 814              	.LVL50:
 815              	.L110:
 565:../../../drivers/led/led.c **** 		}break;
 816              		.loc 1 565 0
 817 02f0 0224     		movs	r4, #2
 818              	.L83:
 819              	.LVL51:
 591:../../../drivers/led/led.c **** 	}
 820              		.loc 1 591 0
 821 02f2 9A8A     		ldrh	r2, [r3, #20]
 822 02f4 0132     		adds	r2, r2, #1
 823 02f6 9A82     		strh	r2, [r3, #20]
 824 02f8 F6E7     		b	.L95
 825              	.LVL52:
 826              	.L103:
 595:../../../drivers/led/led.c **** }
 827              		.loc 1 595 0
 828              		@ sp needed
 829 02fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 830              	.L112:
 831              		.align	2
 832              	.L111:
 833 02fc 00000000 		.word	.LANCHOR0
 834              		.cfi_endproc
 835              	.LFE51:
 837              		.global	__aeabi_i2f
 838              		.global	__aeabi_f2uiz
 839              		.align	1
 840              		.code	16
 841              		.thumb_func
 843              	_cw_ctrl.constprop.0:
 844              	.LFB52:
 354:../../../drivers/led/led.c **** {
 845              		.loc 1 354 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 8
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL53:
 850 0300 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 851              	.LCFI8:
 852              		.cfi_def_cfa_offset 32
 853              		.cfi_offset 0, -32
 854              		.cfi_offset 1, -28
 855              		.cfi_offset 2, -24
 856              		.cfi_offset 4, -20
 857              		.cfi_offset 5, -16
 858              		.cfi_offset 6, -12
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 357:../../../drivers/led/led.c **** 		uint16_t c,w;
 861              		.loc 1 357 0
 862 0302 284C     		ldr	r4, .L120
 863 0304 2389     		ldrh	r3, [r4, #8]
 864 0306 002B     		cmp	r3, #0
 865 0308 45D0     		beq	.L114
 866              	.LBB3:
 359:../../../drivers/led/led.c **** 		w = kScale*(20000 -lcw.tp)*lcw.ln/10;
 867              		.loc 1 359 0
 868 030a E389     		ldrh	r3, [r4, #14]
 869 030c E769     		ldr	r7, [r4, #28]
 870 030e 0193     		str	r3, [sp, #4]
 871 0310 6089     		ldrh	r0, [r4, #10]
 872 0312 FFF7FEFF 		bl	__aeabi_i2f
 873              	.LVL54:
 874 0316 244A     		ldr	r2, .L120+4
 875 0318 019B     		ldr	r3, [sp, #4]
 876 031a 061C     		adds	r6, r0, #0
 877 031c 9818     		adds	r0, r3, r2
 878 031e FFF7FEFF 		bl	__aeabi_i2f
 879              	.LVL55:
 880 0322 391C     		adds	r1, r7, #0
 881 0324 FFF7FEFF 		bl	__aeabi_fmul
 882              	.LVL56:
 883 0328 311C     		adds	r1, r6, #0
 884 032a FFF7FEFF 		bl	__aeabi_fmul
 885              	.LVL57:
 886 032e 1F49     		ldr	r1, .L120+8
 887 0330 FFF7FEFF 		bl	__aeabi_fdiv
 888              	.LVL58:
 889 0334 FFF7FEFF 		bl	__aeabi_f2uiz
 890              	.LVL59:
 360:../../../drivers/led/led.c **** #ifndef RELEASE
 891              		.loc 1 360 0
 892 0338 019B     		ldr	r3, [sp, #4]
 359:../../../drivers/led/led.c **** 		w = kScale*(20000 -lcw.tp)*lcw.ln/10;
 893              		.loc 1 359 0
 894 033a 85B2     		uxth	r5, r0
 895              	.LVL60:
 360:../../../drivers/led/led.c **** #ifndef RELEASE
 896              		.loc 1 360 0
 897 033c 1C48     		ldr	r0, .L120+12
 898 033e C01A     		subs	r0, r0, r3
 899 0340 FFF7FEFF 		bl	__aeabi_i2f
 900              	.LVL61:
 901 0344 391C     		adds	r1, r7, #0
 902 0346 FFF7FEFF 		bl	__aeabi_fmul
 903              	.LVL62:
 904 034a 311C     		adds	r1, r6, #0
 905 034c FFF7FEFF 		bl	__aeabi_fmul
 906              	.LVL63:
 907 0350 1649     		ldr	r1, .L120+8
 908 0352 FFF7FEFF 		bl	__aeabi_fdiv
 909              	.LVL64:
 910 0356 FFF7FEFF 		bl	__aeabi_f2uiz
 911              	.LVL65:
 912 035a 86B2     		uxth	r6, r0
 913              	.LVL66:
 364:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH4, c, lcw.freq-c);//cold
 914              		.loc 1 364 0
 915 035c 002D     		cmp	r5, #0
 916 035e 0AD0     		beq	.L115
 365:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH4);
 917              		.loc 1 365 0
 918 0360 A288     		ldrh	r2, [r4, #4]
 919 0362 2900     		movs	r1, r5
 920 0364 521B     		subs	r2, r2, r5
 921 0366 92B2     		uxth	r2, r2
 922 0368 1020     		movs	r0, #16
 923 036a FFF7FEFF 		bl	PWM_SetPnCnt
 924              	.LVL67:
 366:../../../drivers/led/led.c **** 		}
 925              		.loc 1 366 0
 926 036e 1020     		movs	r0, #16
 927 0370 FFF7FEFF 		bl	PWM_Start
 928              	.LVL68:
 929 0374 02E0     		b	.L116
 930              	.L115:
 369:../../../drivers/led/led.c **** 		}
 931              		.loc 1 369 0
 932 0376 1020     		movs	r0, #16
 933 0378 FFF7FEFF 		bl	PWM_DeInit
 934              	.LVL69:
 935              	.L116:
 371:../../../drivers/led/led.c **** 			PWM_SetPnCnt(PWM_CH5, w, lcw.freq-w);//warm
 936              		.loc 1 371 0
 937 037c 002E     		cmp	r6, #0
 938 037e 0DD0     		beq	.L119
 372:../../../drivers/led/led.c **** 			PWM_Start(PWM_CH5);
 939              		.loc 1 372 0
 940 0380 A288     		ldrh	r2, [r4, #4]
 941 0382 3100     		movs	r1, r6
 942 0384 921B     		subs	r2, r2, r6
 943 0386 92B2     		uxth	r2, r2
 944 0388 2020     		movs	r0, #32
 945 038a FFF7FEFF 		bl	PWM_SetPnCnt
 946              	.LVL70:
 373:../../../drivers/led/led.c **** 		}
 947              		.loc 1 373 0
 948 038e 2020     		movs	r0, #32
 949 0390 FFF7FEFF 		bl	PWM_Start
 950              	.LVL71:
 951 0394 05E0     		b	.L113
 952              	.LVL72:
 953              	.L114:
 954              	.LBE3:
 380:../../../drivers/led/led.c **** 		PWM_DeInit(PWM_CH5);
 955              		.loc 1 380 0
 956 0396 1020     		movs	r0, #16
 957 0398 FFF7FEFF 		bl	PWM_DeInit
 958              	.LVL73:
 959              	.L119:
 381:../../../drivers/led/led.c **** 	}
 960              		.loc 1 381 0
 961 039c 2020     		movs	r0, #32
 962 039e FFF7FEFF 		bl	PWM_DeInit
 963              	.LVL74:
 964              	.L113:
 421:../../../drivers/led/led.c **** 
 965              		.loc 1 421 0
 966              		@ sp needed
 967 03a2 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 968              	.L121:
 969              		.align	2
 970              	.L120:
 971 03a4 00000000 		.word	.LANCHOR0
 972 03a8 E0FCFFFF 		.word	-800
 973 03ac 00002041 		.word	1092616192
 974 03b0 204E0000 		.word	20000
 975              		.cfi_endproc
 976              	.LFE52:
 978              		.section	.rodata
 979              		.set	.LANCHOR1,. + 0
 980              	.LC0:
 981 0000 54       		.byte	84
 982              	.LC1:
 983 0001 55       		.byte	85
 984              		.bss
 985              		.align	2
 986              		.set	.LANCHOR0,. + 0
 989              	lcw:
 990 0000 00000000 		.space	20
 990      00000000 
 990      00000000 
 990      00000000 
 990      00000000 
 993              	ucPeriodCnt:
 994 0014 0000     		.space	2
 997              	deltaLn:
 998 0016 0000     		.space	2
 1001              	deltaTp:
 1002 0018 0000     		.space	2
 1003 001a 0000     		.space	2
 1006              	kScale:
 1007 001c 00000000 		.space	4
 1008              		.text
 1009              	.Letext0:
 1010              		.file 2 "d:\\meshstack\\bc6218\\tools\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\
 1011              		.file 3 "d:\\meshstack\\bc6218\\tools\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\
 1012              		.file 4 "../../../drivers/hal/inc/bc62xx_gpio.h"
 1013              		.file 5 "../../../drivers/led/inc/led.h"
 1014              		.file 6 "../../../drivers/hal/inc/bc62xx_pwm.h"
 1015              		.file 7 "../../../device/inc/systick.h"
